class Node {
  int value;
  Node left;
  Node right;

  Node(this.value);
}

class BinaryTree {
  Node root;

  void insert(int value) {
    if (root == null) {
      root = Node(value);
    } else {
      _insert(root, value);
    }
  }

  void _insert(Node node, int value) {
    if (value < node.value) {
      if (node.left == null) {
        node.left = Node(value);
      } else {
        _insert(node.left, value);
      }
    } else {
      if (node.right == null) {
        node.right = Node(value);
      } else {
        _insert(node.right, value);
      }
    }
  }

  void traverseInOrder(Node node) {
    if (node != null) {
      traverseInOrder(node.left);
      print(node.value);
      traverseInOrder(node.right);
    }
  }
}

void main() {
  BinaryTree tree = BinaryTree();
  tree.insert(5);
  tree.insert(3);
  tree.insert(7);
  tree.insert(1);
  tree.insert(9);

  tree.traverseInOrder(tree.root); // Output: 1, 3, 5, 7, 9
}
